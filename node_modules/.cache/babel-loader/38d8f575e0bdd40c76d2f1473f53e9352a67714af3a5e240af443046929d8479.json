{"ast":null,"code":"import _objectSpread from \"/Users/daniel/Desktop/chat-response/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/daniel/Desktop/chat-response/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nconst _excluded = [\"className\", \"component\", \"viewBox\", \"spin\", \"rotate\", \"tabIndex\", \"onClick\", \"children\"];\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"@rc-component/util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      // affect outter <i>...</i>\n      className,\n      // affect inner <svg>...</svg>\n      component: Component,\n      viewBox,\n      spin,\n      rotate,\n      tabIndex,\n      onClick,\n      // children\n      children\n    } = props,\n    restProps = _objectWithoutProperties(props, _excluded);\n  const iconRef = React.useRef();\n  const mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [\"\".concat(prefixCls, \"-spin\")]: !!spin && !!Component\n  }, className);\n  const svgClassString = classNames({\n    [\"\".concat(prefixCls, \"-spin\")]: !!spin\n  });\n  const svgStyle = rotate ? {\n    msTransform: \"rotate(\".concat(rotate, \"deg)\"),\n    transform: \"rotate(\".concat(rotate, \"deg)\")\n  } : undefined;\n  const innerSvgProps = _objectSpread(_objectSpread({}, svgBaseProps), {}, {\n    className: svgClassString,\n    style: svgStyle,\n    viewBox\n  });\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  const renderInnerNode = () => {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;","map":{"version":3,"names":["_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","React","classNames","useComposeRef","Context","svgBaseProps","warning","useInsertStyles","Icon","forwardRef","props","ref","className","component","Component","viewBox","spin","rotate","tabIndex","onClick","children","restProps","_objectWithoutProperties","_excluded","iconRef","useRef","mergedRef","Boolean","prefixCls","rootClassName","useContext","classString","concat","svgClassString","svgStyle","msTransform","transform","undefined","innerSvgProps","_objectSpread","style","renderInnerNode","createElement","Children","count","isValidElement","only","type","iconTabIndex","role","displayName"],"sources":["/Users/daniel/Desktop/chat-response/node_modules/@ant-design/icons/es/components/Icon.js"],"sourcesContent":["function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n// Seems this is used for iconFont\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { useComposeRef } from \"@rc-component/util/es/ref\";\nimport Context from \"./Context\";\nimport { svgBaseProps, warning, useInsertStyles } from \"../utils\";\nconst Icon = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    // affect outter <i>...</i>\n    className,\n    // affect inner <svg>...</svg>\n    component: Component,\n    viewBox,\n    spin,\n    rotate,\n    tabIndex,\n    onClick,\n    // children\n    children,\n    ...restProps\n  } = props;\n  const iconRef = React.useRef();\n  const mergedRef = useComposeRef(iconRef, ref);\n  warning(Boolean(Component || children), 'Should have `component` prop or `children`.');\n  useInsertStyles(iconRef);\n  const {\n    prefixCls = 'anticon',\n    rootClassName\n  } = React.useContext(Context);\n  const classString = classNames(rootClassName, prefixCls, {\n    [`${prefixCls}-spin`]: !!spin && !!Component\n  }, className);\n  const svgClassString = classNames({\n    [`${prefixCls}-spin`]: !!spin\n  });\n  const svgStyle = rotate ? {\n    msTransform: `rotate(${rotate}deg)`,\n    transform: `rotate(${rotate}deg)`\n  } : undefined;\n  const innerSvgProps = {\n    ...svgBaseProps,\n    className: svgClassString,\n    style: svgStyle,\n    viewBox\n  };\n  if (!viewBox) {\n    delete innerSvgProps.viewBox;\n  }\n\n  // component > children\n  const renderInnerNode = () => {\n    if (Component) {\n      return /*#__PURE__*/React.createElement(Component, innerSvgProps, children);\n    }\n    if (children) {\n      warning(Boolean(viewBox) || React.Children.count(children) === 1 && /*#__PURE__*/React.isValidElement(children) && React.Children.only(children).type === 'use', 'Make sure that you provide correct `viewBox`' + ' prop (default `0 0 1024 1024`) to the icon.');\n      return /*#__PURE__*/React.createElement(\"svg\", _extends({}, innerSvgProps, {\n        viewBox: viewBox\n      }), children);\n    }\n    return null;\n  };\n  let iconTabIndex = tabIndex;\n  if (iconTabIndex === undefined && onClick) {\n    iconTabIndex = -1;\n  }\n  return /*#__PURE__*/React.createElement(\"span\", _extends({\n    role: \"img\"\n  }, restProps, {\n    ref: mergedRef,\n    tabIndex: iconTabIndex,\n    onClick: onClick,\n    className: classString\n  }), renderInnerNode());\n});\nIcon.displayName = 'AntdIcon';\nexport default Icon;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}