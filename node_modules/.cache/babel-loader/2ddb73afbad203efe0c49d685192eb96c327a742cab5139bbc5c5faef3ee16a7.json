{"ast":null,"code":"import _objectSpread from\"/Users/daniel/Desktop/chat-response/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import'./MessageLog.scss';import{IconSparkles}from'@tabler/icons-react';import{marked}from'marked';import{ThreeDots}from'react-loader-spinner';import{getRandomModeCResponse}from'../Chat/aiResponses';// Hook reutilizável de \"máquina de escrever\"\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const useTypewriter=function(fullText,enabled){let speed=arguments.length>2&&arguments[2]!==undefined?arguments[2]:25;let onEnd=arguments.length>3?arguments[3]:undefined;const[displayed,setDisplayed]=React.useState(enabled?'':fullText);React.useEffect(()=>{if(!enabled){setDisplayed(fullText);return;}let i=0;setDisplayed('');const id=setTimeout(function tick(){i+=1;setDisplayed(fullText.slice(0,i));if(i<fullText.length){return setTimeout(tick,speed);}onEnd===null||onEnd===void 0?void 0:onEnd();return undefined;},speed);return()=>clearTimeout(id);},[fullText,enabled,speed,onEnd]);return displayed;};export const UserMessage=_ref=>{let{text}=_ref;return/*#__PURE__*/_jsx(\"div\",{className:\"user-message\",children:/*#__PURE__*/_jsx(\"span\",{children:text})});};export const AiMessage=_ref2=>{let{text,typewriter,onTypewriterEnd}=_ref2;const displayed=useTypewriter(text,!!typewriter,25,onTypewriterEnd);const html=React.useMemo(()=>{return marked.parse(displayed);},[displayed]);const stillTyping=typewriter&&displayed.length<text.length;return/*#__PURE__*/_jsxs(\"div\",{className:\"ai-message \".concat(typewriter?'ai-typing':'ai-completed'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"chat-ai-icon\",children:/*#__PURE__*/_jsx(IconSparkles,{size:20,stroke:2})}),/*#__PURE__*/_jsx(\"p\",{className:\"ai-message-markdown\",\"aria-live\":\"polite\",dangerouslySetInnerHTML:{__html:html}}),stillTyping&&/*#__PURE__*/_jsxs(\"span\",{className:\"ai-typing-dots\",\"aria-hidden\":\"true\",children:[/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"})]})]});};export default function MessageLog(_ref3){var _cData$steps;let{messages,aiTyping,showTypewriter,pendingAiMsg,onTypewriterEnd,messagesEndRef,processingSeconds=null,mode='A'}=_ref3;const steps=React.useMemo(()=>['Buscando base de dados (1/4)','Identificando os pontos geográficos (2/4)','Aplicando os filtros definidos (3/4)','Aplicando camada no mapa (4/4)'],[]);const stepsNoCounters=React.useMemo(()=>['Buscando base de dados','Identificando os pontos geográficos','Aplicando os filtros definidos','Aplicando camada no mapa'],[]);// ===== Modo A (DESABILITADO) =====\n// const [aIdx, setAIdx] = React.useState(0);\n// const [aDisplayed, setADisplayed] = React.useState('');\n// const aIntervalsRef = React.useRef({ step: null, typing: null });\n// React.useEffect(() => {\n//   if (mode !== 'A' || !aiTyping || showTypewriter || !processingSeconds) {\n//     clearInterval(aIntervalsRef.current.step);\n//     clearInterval(aIntervalsRef.current.typing);\n//     setAIdx(0);\n//     setADisplayed('');\n//     return;\n//   }\n//   const totalMs = processingSeconds * 1000;\n//   const perStepMs = Math.max(200, Math.floor(totalMs / steps.length));\n//   const startTyping = (text) => {\n//     clearInterval(aIntervalsRef.current.typing);\n//     let i = 0;\n//     setADisplayed('');\n//     aIntervalsRef.current.typing = setInterval(() => {\n//       i += 1;\n//       setADisplayed(text.slice(0, i));\n//       if (i >= text.length) clearInterval(aIntervalsRef.current.typing);\n//     }, 20);\n//   };\n//   setAIdx(0);\n//   startTyping(steps[0]);\n//   clearInterval(aIntervalsRef.current.step);\n//   aIntervalsRef.current.step = setInterval(() => {\n//     setAIdx((prev) => {\n//       const next = prev + 1;\n//       if (next < steps.length) {\n//         startTyping(steps[next]);\n//         return next;\n//       }\n//       clearInterval(aIntervalsRef.current.step);\n//       return prev;\n//     });\n//   }, perStepMs);\n//   return () => {\n//     clearInterval(aIntervalsRef.current.step);\n//     clearInterval(aIntervalsRef.current.typing);\n//   };\n// }, [mode, aiTyping, showTypewriter, processingSeconds, steps]);\n// ===== Modo B =====\nconst[bIdx,setBIdx]=React.useState(0);const[bTexts,setBTexts]=React.useState(()=>Array(stepsNoCounters.length).fill(''));const bTimeoutsRef=React.useRef([]);const TYPING_CHAR_DELAY_MS=25;React.useEffect(()=>{const clearAll=()=>{bTimeoutsRef.current.forEach(clearTimeout);bTimeoutsRef.current=[];};if(mode!=='B'||!aiTyping||showTypewriter||!processingSeconds){clearAll();setBIdx(0);setBTexts(Array(stepsNoCounters.length).fill(''));return;}clearAll();setBIdx(0);setBTexts(Array(stepsNoCounters.length).fill(''));const totalMs=processingSeconds*1000;const stepsCount=stepsNoCounters.length;const perStepMs=Math.max(200,Math.floor(totalMs/stepsCount));const typeStep=index=>{const full=stepsNoCounters[index];let i=0;const stepStart=Date.now();setBIdx(index);const tick=()=>{i+=1;setBTexts(prev=>{const next=prev.slice();next[index]=full.slice(0,i);return next;});if(i<full.length){bTimeoutsRef.current.push(setTimeout(tick,TYPING_CHAR_DELAY_MS));}else{const elapsed=Date.now()-stepStart;const remainingHold=Math.max(0,perStepMs-elapsed);if(index+1<stepsCount){bTimeoutsRef.current.push(setTimeout(()=>{typeStep(index+1);},remainingHold));}}};bTimeoutsRef.current.push(setTimeout(tick,TYPING_CHAR_DELAY_MS));};typeStep(0);return()=>clearAll();},[mode,aiTyping,showTypewriter,processingSeconds,stepsNoCounters]);// ===== Modo C =====\nconst[cData,setCData]=React.useState(null);const[cBigSteps,setCBigSteps]=React.useState([]);const[cCurrentBigStep,setCCurrentBigStep]=React.useState(0);const[cCurrentSmallStep,setCCurrentSmallStep]=React.useState(0);const[cBigStepText,setCBigStepText]=React.useState('');const[cSmallStepText,setCSmallStepText]=React.useState('');const[cIsBigStepComplete,setCIsBigStepComplete]=React.useState(false);const cTimeoutsRef=React.useRef([]);React.useEffect(()=>{const clearAll=()=>{cTimeoutsRef.current.forEach(clearTimeout);cTimeoutsRef.current=[];};if(mode!=='C'||!aiTyping||showTypewriter||!processingSeconds){clearAll();setCData(null);setCBigSteps([]);setCCurrentBigStep(0);setCCurrentSmallStep(0);setCBigStepText('');setCSmallStepText('');setCIsBigStepComplete(false);return;}// Obter dados aleatórios para o modo C\nconst modeCData=getRandomModeCResponse();setCData(modeCData);setCBigSteps([]);setCCurrentBigStep(0);setCCurrentSmallStep(0);setCBigStepText('');setCSmallStepText('');setCIsBigStepComplete(false);if(modeCData.type==='direct'){return;}clearAll();const bigSteps=modeCData.steps;const processBigStep=bigStepIndex=>{if(bigStepIndex>=bigSteps.length){// Todos os big steps concluídos\n// Adicionar o último big step à lista antes de limpar\nif(bigStepIndex>0){const lastBigStep=bigSteps[bigStepIndex-1];setCBigSteps(prev=>[...prev,_objectSpread(_objectSpread({},lastBigStep),{},{status:'typed',displayText:lastBigStep.title})]);}cTimeoutsRef.current.push(setTimeout(()=>{setCBigSteps([]);setCCurrentBigStep(0);setCCurrentSmallStep(0);setCBigStepText('');setCSmallStepText('');setCIsBigStepComplete(false);},1000));return;}// Adicionar o big step anterior à lista quando o próximo começar\nif(bigStepIndex>0){const previousBigStep=bigSteps[bigStepIndex-1];setCBigSteps(prev=>[...prev,_objectSpread(_objectSpread({},previousBigStep),{},{status:'typed',displayText:previousBigStep.title})]);}const bigStep=bigSteps[bigStepIndex];setCCurrentBigStep(bigStepIndex);setCCurrentSmallStep(0);setCBigStepText('');setCSmallStepText('');setCIsBigStepComplete(false);// 1. Big step começa a renderizar com contador\nconst bigStepText=\"\".concat(bigStep.title,\" (\").concat(bigStep.id,\"/\").concat(bigSteps.length,\")\");let charIndex=0;const typeBigStep=()=>{if(charIndex<bigStepText.length){setCBigStepText(bigStepText.slice(0,charIndex+1));charIndex++;cTimeoutsRef.current.push(setTimeout(typeBigStep,40));}else{// 2. Big step completo, começar small steps\nsetCIsBigStepComplete(true);processSmallStep(0);}};cTimeoutsRef.current.push(setTimeout(typeBigStep,200));const processSmallStep=smallStepIndex=>{if(smallStepIndex>=bigStep.smallSteps.length){// 4. Small steps acabaram, big step termina\n// Primeiro limpar o big step atual\nsetCBigStepText('');setCSmallStepText('');setCIsBigStepComplete(false);// Próximo big step\nprocessBigStep(bigStepIndex+1);return;}setCCurrentSmallStep(smallStepIndex);const smallStepText=bigStep.smallSteps[smallStepIndex];// 3. Small step renderiza com animação\nlet charIndex=0;setCSmallStepText('');const typeSmallStep=()=>{if(charIndex<smallStepText.length){setCSmallStepText(smallStepText.slice(0,charIndex+1));charIndex++;cTimeoutsRef.current.push(setTimeout(typeSmallStep,30));}else{// Small step completo, próximo após 1.5s\ncTimeoutsRef.current.push(setTimeout(()=>processSmallStep(smallStepIndex+1),1500));}};cTimeoutsRef.current.push(setTimeout(typeSmallStep,100));};};processBigStep(0);return()=>clearAll();},[mode,aiTyping,showTypewriter,processingSeconds]);return/*#__PURE__*/_jsxs(\"div\",{className:\"message-log\",children:[messages.map((msg,idx)=>msg.sender==='user'?/*#__PURE__*/_jsx(UserMessage,{text:msg.text},idx):/*#__PURE__*/_jsx(AiMessage,{text:msg.text,typewriter:false},idx)),aiTyping&&!showTypewriter&&(mode==='B'?/*#__PURE__*/_jsx(\"div\",{className:\"ai-message ai-loading modeB\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ai-message-markdown\",\"aria-live\":\"polite\",children:[stepsNoCounters.map((_,i)=>/*#__PURE__*/_jsxs(\"p\",{className:i===bIdx?'typing':i<bIdx?'typed':'',children:[/*#__PURE__*/_jsx(\"span\",{className:\"loader\",children:/*#__PURE__*/_jsx(ThreeDots,{visible:true})}),bTexts[i]]},i)),bIdx<stepsNoCounters.length&&/*#__PURE__*/_jsxs(\"span\",{className:\"ai-typing-dots\",\"aria-hidden\":\"true\",children:[/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"})]})]})}):mode==='C'?/*#__PURE__*/_jsx(\"div\",{className:\"ai-message ai-loading modeC\",children:/*#__PURE__*/_jsx(\"div\",{className:\"ai-message-markdown\",\"aria-live\":\"polite\",children:cData&&cData.type==='bigSteps'?/*#__PURE__*/_jsxs(_Fragment,{children:[cBigSteps.map((bigStep,bigIndex)=>/*#__PURE__*/_jsx(\"p\",{className:\"big-step typed\",children:bigStep.displayText},bigIndex)),cCurrentBigStep<((cData===null||cData===void 0?void 0:(_cData$steps=cData.steps)===null||_cData$steps===void 0?void 0:_cData$steps.length)||0)&&cBigStepText&&/*#__PURE__*/_jsxs(\"p\",{className:\"big-step typing\",children:[cBigStepText,cIsBigStepComplete&&/*#__PURE__*/_jsxs(\"p\",{className:\"small-step typing\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"loader\",children:/*#__PURE__*/_jsx(ThreeDots,{visible:true})}),cSmallStepText]})]}),cBigSteps.length===0&&/*#__PURE__*/_jsx(\"p\",{})]}):cData&&cData.type==='direct'?/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"span\",{className:\"loader\",children:/*#__PURE__*/_jsx(ThreeDots,{visible:true})}),cData.response]}):/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"span\",{className:\"loader\",children:/*#__PURE__*/_jsx(ThreeDots,{visible:true})})})})}):/*#__PURE__*/// Modo A desabilitado - fallback para modo B\n_jsx(\"div\",{className:\"ai-message ai-loading modeB\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"ai-message-markdown\",\"aria-live\":\"polite\",children:[stepsNoCounters.map((_,i)=>/*#__PURE__*/_jsxs(\"p\",{className:i===bIdx?'typing':i<bIdx?'typed':'',children:[/*#__PURE__*/_jsx(\"span\",{className:\"loader\",children:/*#__PURE__*/_jsx(ThreeDots,{visible:true})}),bTexts[i]]},i)),bIdx<stepsNoCounters.length&&/*#__PURE__*/_jsxs(\"span\",{className:\"ai-typing-dots\",\"aria-hidden\":\"true\",children:[/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"}),/*#__PURE__*/_jsx(\"span\",{children:\".\"})]})]})})),aiTyping&&showTypewriter&&/*#__PURE__*/_jsx(AiMessage,{text:pendingAiMsg,typewriter:true,onTypewriterEnd:onTypewriterEnd}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]});}","map":{"version":3,"names":["React","IconSparkles","marked","ThreeDots","getRandomModeCResponse","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","useTypewriter","fullText","enabled","speed","arguments","length","undefined","onEnd","displayed","setDisplayed","useState","useEffect","i","id","setTimeout","tick","slice","clearTimeout","UserMessage","_ref","text","className","children","AiMessage","_ref2","typewriter","onTypewriterEnd","html","useMemo","parse","stillTyping","concat","size","stroke","dangerouslySetInnerHTML","__html","MessageLog","_ref3","_cData$steps","messages","aiTyping","showTypewriter","pendingAiMsg","messagesEndRef","processingSeconds","mode","steps","stepsNoCounters","bIdx","setBIdx","bTexts","setBTexts","Array","fill","bTimeoutsRef","useRef","TYPING_CHAR_DELAY_MS","clearAll","current","forEach","totalMs","stepsCount","perStepMs","Math","max","floor","typeStep","index","full","stepStart","Date","now","prev","next","push","elapsed","remainingHold","cData","setCData","cBigSteps","setCBigSteps","cCurrentBigStep","setCCurrentBigStep","cCurrentSmallStep","setCCurrentSmallStep","cBigStepText","setCBigStepText","cSmallStepText","setCSmallStepText","cIsBigStepComplete","setCIsBigStepComplete","cTimeoutsRef","modeCData","type","bigSteps","processBigStep","bigStepIndex","lastBigStep","_objectSpread","status","displayText","title","previousBigStep","bigStep","bigStepText","charIndex","typeBigStep","processSmallStep","smallStepIndex","smallSteps","smallStepText","typeSmallStep","map","msg","idx","sender","_","visible","bigIndex","response","ref"],"sources":["/Users/daniel/Desktop/chat-response/src/components/MessageLog/MessageLog.js"],"sourcesContent":["import React from 'react';\nimport './MessageLog.scss';\nimport { IconSparkles } from '@tabler/icons-react';\nimport { marked } from 'marked';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { getRandomModeCResponse } from '../Chat/aiResponses';\n\n// Hook reutilizável de \"máquina de escrever\"\nconst useTypewriter = (fullText, enabled, speed = 25, onEnd) => {\n  const [displayed, setDisplayed] = React.useState(enabled ? '' : fullText);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      setDisplayed(fullText);\n      return;\n    }\n    let i = 0;\n    setDisplayed('');\n    const id = setTimeout(function tick() {\n      i += 1;\n      setDisplayed(fullText.slice(0, i));\n      if (i < fullText.length) {\n        return setTimeout(tick, speed);\n      }\n      onEnd?.();\n      return undefined;\n    }, speed);\n\n    return () => clearTimeout(id);\n  }, [fullText, enabled, speed, onEnd]);\n\n  return displayed;\n};\n\nexport const UserMessage = ({ text }) => (\n  <div className=\"user-message\">\n    <span>{text}</span>\n  </div>\n);\n\nexport const AiMessage = ({ text, typewriter, onTypewriterEnd }) => {\n  const displayed = useTypewriter(text, !!typewriter, 25, onTypewriterEnd);\n\n  const html = React.useMemo(() => {\n    return marked.parse(displayed);\n  }, [displayed]);\n\n  const stillTyping = typewriter && displayed.length < text.length;\n\n  return (\n    <div className={`ai-message ${typewriter ? 'ai-typing' : 'ai-completed'}`}>\n      <span className=\"chat-ai-icon\">\n        <IconSparkles size={20} stroke={2} />\n      </span>\n      <p\n        className=\"ai-message-markdown\"\n        aria-live=\"polite\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      {stillTyping && (\n        <span className=\"ai-typing-dots\" aria-hidden=\"true\">\n          <span>.</span><span>.</span><span>.</span>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default function MessageLog({\n  messages,\n  aiTyping,\n  showTypewriter,\n  pendingAiMsg,\n  onTypewriterEnd,\n  messagesEndRef,\n  processingSeconds = null,\n  mode = 'A',\n}) {\n  const steps = React.useMemo(() => ([\n    'Buscando base de dados (1/4)',\n    'Identificando os pontos geográficos (2/4)',\n    'Aplicando os filtros definidos (3/4)',\n    'Aplicando camada no mapa (4/4)',\n  ]), []);\n\n  const stepsNoCounters = React.useMemo(() => ([\n    'Buscando base de dados',\n    'Identificando os pontos geográficos',\n    'Aplicando os filtros definidos',\n    'Aplicando camada no mapa',\n  ]), []);\n\n  // ===== Modo A (DESABILITADO) =====\n  // const [aIdx, setAIdx] = React.useState(0);\n  // const [aDisplayed, setADisplayed] = React.useState('');\n  // const aIntervalsRef = React.useRef({ step: null, typing: null });\n\n  // React.useEffect(() => {\n  //   if (mode !== 'A' || !aiTyping || showTypewriter || !processingSeconds) {\n  //     clearInterval(aIntervalsRef.current.step);\n  //     clearInterval(aIntervalsRef.current.typing);\n  //     setAIdx(0);\n  //     setADisplayed('');\n  //     return;\n  //   }\n\n  //   const totalMs = processingSeconds * 1000;\n  //   const perStepMs = Math.max(200, Math.floor(totalMs / steps.length));\n\n  //   const startTyping = (text) => {\n  //     clearInterval(aIntervalsRef.current.typing);\n  //     let i = 0;\n  //     setADisplayed('');\n  //     aIntervalsRef.current.typing = setInterval(() => {\n  //       i += 1;\n  //       setADisplayed(text.slice(0, i));\n  //       if (i >= text.length) clearInterval(aIntervalsRef.current.typing);\n  //     }, 20);\n  //   };\n\n  //   setAIdx(0);\n  //   startTyping(steps[0]);\n\n  //   clearInterval(aIntervalsRef.current.step);\n  //   aIntervalsRef.current.step = setInterval(() => {\n  //     setAIdx((prev) => {\n  //       const next = prev + 1;\n  //       if (next < steps.length) {\n  //         startTyping(steps[next]);\n  //         return next;\n  //       }\n  //       clearInterval(aIntervalsRef.current.step);\n  //       return prev;\n  //     });\n  //   }, perStepMs);\n\n  //   return () => {\n  //     clearInterval(aIntervalsRef.current.step);\n  //     clearInterval(aIntervalsRef.current.typing);\n  //   };\n  // }, [mode, aiTyping, showTypewriter, processingSeconds, steps]);\n\n  // ===== Modo B =====\n  const [bIdx, setBIdx] = React.useState(0);\n  const [bTexts, setBTexts] = React.useState(() =>\n    Array(stepsNoCounters.length).fill('')\n  );\n  const bTimeoutsRef = React.useRef([]);\n  const TYPING_CHAR_DELAY_MS = 25;\n\n  React.useEffect(() => {\n    const clearAll = () => {\n      bTimeoutsRef.current.forEach(clearTimeout);\n      bTimeoutsRef.current = [];\n    };\n\n    if (mode !== 'B' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearAll();\n      setBIdx(0);\n      setBTexts(Array(stepsNoCounters.length).fill(''));\n      return;\n    }\n\n    clearAll();\n    setBIdx(0);\n    setBTexts(Array(stepsNoCounters.length).fill(''));\n\n    const totalMs = processingSeconds * 1000;\n    const stepsCount = stepsNoCounters.length;\n    const perStepMs = Math.max(200, Math.floor(totalMs / stepsCount));\n\n    const typeStep = (index) => {\n      const full = stepsNoCounters[index];\n      let i = 0;\n      const stepStart = Date.now();\n\n      setBIdx(index);\n\n      const tick = () => {\n        i += 1;\n        setBTexts((prev) => {\n          const next = prev.slice();\n          next[index] = full.slice(0, i);\n          return next;\n        });\n\n        if (i < full.length) {\n          bTimeoutsRef.current.push(setTimeout(tick, TYPING_CHAR_DELAY_MS));\n        } else {\n          const elapsed = Date.now() - stepStart;\n          const remainingHold = Math.max(0, perStepMs - elapsed);\n\n          if (index + 1 < stepsCount) {\n            bTimeoutsRef.current.push(\n              setTimeout(() => {\n                typeStep(index + 1);\n              }, remainingHold)\n            );\n          }\n        }\n      };\n\n      bTimeoutsRef.current.push(setTimeout(tick, TYPING_CHAR_DELAY_MS));\n    };\n\n    typeStep(0);\n\n    return () => clearAll();\n  }, [mode, aiTyping, showTypewriter, processingSeconds, stepsNoCounters]);\n\n  // ===== Modo C =====\n  const [cData, setCData] = React.useState(null);\n  const [cBigSteps, setCBigSteps] = React.useState([]);\n  const [cCurrentBigStep, setCCurrentBigStep] = React.useState(0);\n  const [cCurrentSmallStep, setCCurrentSmallStep] = React.useState(0);\n  const [cBigStepText, setCBigStepText] = React.useState('');\n  const [cSmallStepText, setCSmallStepText] = React.useState('');\n  const [cIsBigStepComplete, setCIsBigStepComplete] = React.useState(false);\n  const cTimeoutsRef = React.useRef([]);\n\n  React.useEffect(() => {\n    const clearAll = () => {\n      cTimeoutsRef.current.forEach(clearTimeout);\n      cTimeoutsRef.current = [];\n    };\n\n    if (mode !== 'C' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearAll();\n      setCData(null);\n      setCBigSteps([]);\n      setCCurrentBigStep(0);\n      setCCurrentSmallStep(0);\n      setCBigStepText('');\n      setCSmallStepText('');\n      setCIsBigStepComplete(false);\n      return;\n    }\n\n    // Obter dados aleatórios para o modo C\n    const modeCData = getRandomModeCResponse();\n    setCData(modeCData);\n    setCBigSteps([]);\n    setCCurrentBigStep(0);\n    setCCurrentSmallStep(0);\n    setCBigStepText('');\n    setCSmallStepText('');\n    setCIsBigStepComplete(false);\n\n    if (modeCData.type === 'direct') {\n      return;\n    }\n\n    clearAll();\n\n    const bigSteps = modeCData.steps;\n\n    const processBigStep = (bigStepIndex) => {\n      if (bigStepIndex >= bigSteps.length) {\n        // Todos os big steps concluídos\n        // Adicionar o último big step à lista antes de limpar\n        if (bigStepIndex > 0) {\n          const lastBigStep = bigSteps[bigStepIndex - 1];\n          setCBigSteps(prev => [...prev, {\n            ...lastBigStep,\n            status: 'typed',\n            displayText: lastBigStep.title\n          }]);\n        }\n        \n        cTimeoutsRef.current.push(\n          setTimeout(() => {\n            setCBigSteps([]);\n            setCCurrentBigStep(0);\n            setCCurrentSmallStep(0);\n            setCBigStepText('');\n            setCSmallStepText('');\n            setCIsBigStepComplete(false);\n          }, 1000)\n        );\n        return;\n      }\n\n      // Adicionar o big step anterior à lista quando o próximo começar\n      if (bigStepIndex > 0) {\n        const previousBigStep = bigSteps[bigStepIndex - 1];\n        setCBigSteps(prev => [...prev, {\n          ...previousBigStep,\n          status: 'typed',\n          displayText: previousBigStep.title\n        }]);\n      }\n\n      const bigStep = bigSteps[bigStepIndex];\n      setCCurrentBigStep(bigStepIndex);\n      setCCurrentSmallStep(0);\n      setCBigStepText('');\n      setCSmallStepText('');\n      setCIsBigStepComplete(false);\n\n      // 1. Big step começa a renderizar com contador\n      const bigStepText = `${bigStep.title} (${bigStep.id}/${bigSteps.length})`;\n      let charIndex = 0;\n      \n      const typeBigStep = () => {\n        if (charIndex < bigStepText.length) {\n          setCBigStepText(bigStepText.slice(0, charIndex + 1));\n          charIndex++;\n          cTimeoutsRef.current.push(setTimeout(typeBigStep, 40));\n        } else {\n          // 2. Big step completo, começar small steps\n          setCIsBigStepComplete(true);\n          processSmallStep(0);\n        }\n      };\n      \n      cTimeoutsRef.current.push(setTimeout(typeBigStep, 200));\n\n      const processSmallStep = (smallStepIndex) => {\n        if (smallStepIndex >= bigStep.smallSteps.length) {\n          // 4. Small steps acabaram, big step termina\n          // Primeiro limpar o big step atual\n          setCBigStepText('');\n          setCSmallStepText('');\n          setCIsBigStepComplete(false);\n          \n          // Próximo big step\n          processBigStep(bigStepIndex + 1);\n          return;\n        }\n\n        setCCurrentSmallStep(smallStepIndex);\n        const smallStepText = bigStep.smallSteps[smallStepIndex];\n        \n        // 3. Small step renderiza com animação\n        let charIndex = 0;\n        setCSmallStepText('');\n        \n        const typeSmallStep = () => {\n          if (charIndex < smallStepText.length) {\n            setCSmallStepText(smallStepText.slice(0, charIndex + 1));\n            charIndex++;\n            cTimeoutsRef.current.push(setTimeout(typeSmallStep, 30));\n          } else {\n            // Small step completo, próximo após 1.5s\n            cTimeoutsRef.current.push(\n              setTimeout(() => processSmallStep(smallStepIndex + 1), 1500)\n            );\n          }\n        };\n\n        cTimeoutsRef.current.push(setTimeout(typeSmallStep, 100));\n      };\n    };\n\n    processBigStep(0);\n\n    return () => clearAll();\n  }, [mode, aiTyping, showTypewriter, processingSeconds]);\n\n  return (\n    <div className=\"message-log\">\n      {messages.map((msg, idx) =>\n        msg.sender === 'user' ? (\n          <UserMessage key={idx} text={msg.text} />\n        ) : (\n          <AiMessage key={idx} text={msg.text} typewriter={false} />\n        )\n      )}\n\n      {aiTyping && !showTypewriter && (\n        mode === 'B' ? (\n          <div className=\"ai-message ai-loading modeB\">\n            <div className=\"ai-message-markdown\" aria-live=\"polite\">\n              {stepsNoCounters.map((_, i) => (\n                <p key={i} className={i === bIdx ? 'typing' : i < bIdx ? 'typed' : ''}>\n                  <span className=\"loader\">\n                <ThreeDots visible />\n              </span>\n                  {bTexts[i]}\n                </p>\n              ))}\n              {bIdx < stepsNoCounters.length && (\n                <span className=\"ai-typing-dots\" aria-hidden=\"true\">\n                  <span>.</span><span>.</span><span>.</span>\n                </span>\n              )}\n            </div>\n          </div>\n        ) : mode === 'C' ? (\n          <div className=\"ai-message ai-loading modeC\">\n            <div className=\"ai-message-markdown\" aria-live=\"polite\">\n              {cData && cData.type === 'bigSteps' ? (\n                <>\n                  {/* Big steps concluídos (sem contador) */}\n                  {cBigSteps.map((bigStep, bigIndex) => (\n                    <p key={bigIndex} className=\"big-step typed\">\n                      {bigStep.displayText}\n                    </p>\n                  ))}\n                  \n                  {/* Big step atual sendo digitado (com contador) */}\n                  {cCurrentBigStep < (cData?.steps?.length || 0) && cBigStepText && (\n                    <p className=\"big-step typing\">\n                      {cBigStepText}\n                      {/* Small step sempre visível quando big step está completo */}\n                      {cIsBigStepComplete && (\n                        <p className=\"small-step typing\">\n                          <span className=\"loader\">\n                            <ThreeDots visible />\n                          </span>\n                          {cSmallStepText}\n                        </p>\n                      )}\n                    </p>\n                  )}\n                  {cBigSteps.length === 0 && (\n                    <p>\n                      {/* <span className=\"loader\">\n                        <ThreeDots visible />\n                      </span> */}\n                      \n                    </p>\n                  )}\n                </>\n              ) : cData && cData.type === 'direct' ? (\n                <p>\n                  <span className=\"loader\">\n                    <ThreeDots visible />\n                  </span>\n                  {cData.response}\n                </p>\n              ) : (\n                <p>\n                  <span className=\"loader\">\n                    <ThreeDots visible />\n                  </span>\n                   \n                </p>\n              )}\n            </div>\n          </div>\n        ) : (\n          // Modo A desabilitado - fallback para modo B\n          <div className=\"ai-message ai-loading modeB\">\n            <div className=\"ai-message-markdown\" aria-live=\"polite\">\n              {stepsNoCounters.map((_, i) => (\n                <p key={i} className={i === bIdx ? 'typing' : i < bIdx ? 'typed' : ''}>\n                  <span className=\"loader\">\n                <ThreeDots visible />\n              </span>\n                  {bTexts[i]}\n                </p>\n              ))}\n              {bIdx < stepsNoCounters.length && (\n                <span className=\"ai-typing-dots\" aria-hidden=\"true\">\n                  <span>.</span><span>.</span><span>.</span>\n                </span>\n              )}\n            </div>\n          </div>\n        )\n      )}\n\n      {aiTyping && showTypewriter && (\n        <AiMessage text={pendingAiMsg} typewriter onTypewriterEnd={onTypewriterEnd} />\n      )}\n\n      <div ref={messagesEndRef} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}