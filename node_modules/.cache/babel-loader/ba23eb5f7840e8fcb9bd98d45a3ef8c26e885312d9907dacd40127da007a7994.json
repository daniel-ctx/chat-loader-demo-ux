{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/chat-response/src/components/MessageLog/MessageLog.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React from 'react';\nimport './MessageLog.scss';\nimport { IconSparkles } from '@tabler/icons-react';\nimport { marked } from 'marked';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { getRandomModeCResponse } from '../Chat/aiResponses';\n\n// Hook reutilizável de \"máquina de escrever\"\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useTypewriter = (fullText, enabled, speed = 25, onEnd) => {\n  _s();\n  const [displayed, setDisplayed] = React.useState(enabled ? '' : fullText);\n  React.useEffect(() => {\n    if (!enabled) {\n      setDisplayed(fullText);\n      return;\n    }\n    let i = 0;\n    setDisplayed('');\n    const id = setTimeout(function tick() {\n      i += 1;\n      setDisplayed(fullText.slice(0, i));\n      if (i < fullText.length) {\n        return setTimeout(tick, speed);\n      }\n      onEnd === null || onEnd === void 0 ? void 0 : onEnd();\n      return undefined;\n    }, speed);\n    return () => clearTimeout(id);\n  }, [fullText, enabled, speed, onEnd]);\n  return displayed;\n};\n_s(useTypewriter, \"H6wd2LCcgiTM3t/tzawrHcZpyw8=\");\nexport const UserMessage = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"user-message\",\n  children: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 3\n}, this);\n_c = UserMessage;\nexport const AiMessage = ({\n  text,\n  typewriter,\n  onTypewriterEnd\n}) => {\n  _s2();\n  const displayed = useTypewriter(text, !!typewriter, 25, onTypewriterEnd);\n  const html = React.useMemo(() => {\n    return marked.parse(displayed);\n  }, [displayed]);\n  const stillTyping = typewriter && displayed.length < text.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ai-message ${typewriter ? 'ai-typing' : 'ai-completed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"chat-ai-icon\",\n      children: /*#__PURE__*/_jsxDEV(IconSparkles, {\n        size: 20,\n        stroke: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ai-message-markdown\",\n      \"aria-live\": \"polite\",\n      dangerouslySetInnerHTML: {\n        __html: html\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), stillTyping && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ai-typing-dots\",\n      \"aria-hidden\": \"true\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s2(AiMessage, \"GUUFbQIiL5seOwaZSEuYjDkwups=\", false, function () {\n  return [useTypewriter];\n});\n_c2 = AiMessage;\nexport default function MessageLog({\n  messages,\n  aiTyping,\n  showTypewriter,\n  pendingAiMsg,\n  onTypewriterEnd,\n  messagesEndRef,\n  processingSeconds = null,\n  mode = 'A'\n}) {\n  _s3();\n  const steps = React.useMemo(() => ['Buscando base de dados (1/4)', 'Identificando os pontos geográficos (2/4)', 'Aplicando os filtros definidos (3/4)', 'Aplicando camada no mapa (4/4)'], []);\n  const stepsNoCounters = React.useMemo(() => ['Buscando base de dados', 'Identificando os pontos geográficos', 'Aplicando os filtros definidos', 'Aplicando camada no mapa'], []);\n\n  // ===== Modo A =====\n  const [aIdx, setAIdx] = React.useState(0);\n  const [aDisplayed, setADisplayed] = React.useState('');\n  const aIntervalsRef = React.useRef({\n    step: null,\n    typing: null\n  });\n  React.useEffect(() => {\n    if (mode !== 'A' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearInterval(aIntervalsRef.current.step);\n      clearInterval(aIntervalsRef.current.typing);\n      setAIdx(0);\n      setADisplayed('');\n      return;\n    }\n    const totalMs = processingSeconds * 1000;\n    const perStepMs = Math.max(200, Math.floor(totalMs / steps.length));\n    const startTyping = text => {\n      clearInterval(aIntervalsRef.current.typing);\n      let i = 0;\n      setADisplayed('');\n      aIntervalsRef.current.typing = setInterval(() => {\n        i += 1;\n        setADisplayed(text.slice(0, i));\n        if (i >= text.length) clearInterval(aIntervalsRef.current.typing);\n      }, 20);\n    };\n    setAIdx(0);\n    startTyping(steps[0]);\n    clearInterval(aIntervalsRef.current.step);\n    aIntervalsRef.current.step = setInterval(() => {\n      setAIdx(prev => {\n        const next = prev + 1;\n        if (next < steps.length) {\n          startTyping(steps[next]);\n          return next;\n        }\n        clearInterval(aIntervalsRef.current.step);\n        return prev;\n      });\n    }, perStepMs);\n    return () => {\n      clearInterval(aIntervalsRef.current.step);\n      clearInterval(aIntervalsRef.current.typing);\n    };\n  }, [mode, aiTyping, showTypewriter, processingSeconds, steps]);\n\n  // ===== Modo B =====\n  const [bIdx, setBIdx] = React.useState(0);\n  const [bTexts, setBTexts] = React.useState(() => Array(stepsNoCounters.length).fill(''));\n  const bTimeoutsRef = React.useRef([]);\n  const TYPING_CHAR_DELAY_MS = 25;\n  React.useEffect(() => {\n    const clearAll = () => {\n      bTimeoutsRef.current.forEach(clearTimeout);\n      bTimeoutsRef.current = [];\n    };\n    if (mode !== 'B' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearAll();\n      setBIdx(0);\n      setBTexts(Array(stepsNoCounters.length).fill(''));\n      return;\n    }\n    clearAll();\n    setBIdx(0);\n    setBTexts(Array(stepsNoCounters.length).fill(''));\n    const totalMs = processingSeconds * 1000;\n    const stepsCount = stepsNoCounters.length;\n    const perStepMs = Math.max(200, Math.floor(totalMs / stepsCount));\n    const typeStep = index => {\n      const full = stepsNoCounters[index];\n      let i = 0;\n      const stepStart = Date.now();\n      setBIdx(index);\n      const tick = () => {\n        i += 1;\n        setBTexts(prev => {\n          const next = prev.slice();\n          next[index] = full.slice(0, i);\n          return next;\n        });\n        if (i < full.length) {\n          bTimeoutsRef.current.push(setTimeout(tick, TYPING_CHAR_DELAY_MS));\n        } else {\n          const elapsed = Date.now() - stepStart;\n          const remainingHold = Math.max(0, perStepMs - elapsed);\n          if (index + 1 < stepsCount) {\n            bTimeoutsRef.current.push(setTimeout(() => {\n              typeStep(index + 1);\n            }, remainingHold));\n          }\n        }\n      };\n      bTimeoutsRef.current.push(setTimeout(tick, TYPING_CHAR_DELAY_MS));\n    };\n    typeStep(0);\n    return () => clearAll();\n  }, [mode, aiTyping, showTypewriter, processingSeconds, stepsNoCounters]);\n\n  // ===== Modo C =====\n  const [cData, setCData] = React.useState(null);\n  const [cBigSteps, setCBigSteps] = React.useState([]);\n  const [cCurrentBigStep, setCCurrentBigStep] = React.useState(0);\n  const [cCurrentSmallStep, setCCurrentSmallStep] = React.useState(0);\n  const [cSmallStepText, setCSmallStepText] = React.useState('');\n  const cTimeoutsRef = React.useRef([]);\n  React.useEffect(() => {\n    const clearAll = () => {\n      cTimeoutsRef.current.forEach(clearTimeout);\n      cTimeoutsRef.current = [];\n    };\n    if (mode !== 'C' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearAll();\n      setCData(null);\n      setCBigSteps([]);\n      setCCurrentBigStep(0);\n      setCCurrentSmallStep(0);\n      setCSmallStepText('');\n      return;\n    }\n\n    // Obter dados aleatórios para o modo C\n    const modeCData = getRandomModeCResponse();\n    setCData(modeCData);\n    setCBigSteps([]);\n    setCCurrentBigStep(0);\n    setCCurrentSmallStep(0);\n    setCSmallStepText('');\n    if (modeCData.type === 'direct') {\n      // Para respostas diretas, não há steps\n      return;\n    }\n    clearAll();\n    const totalMs = processingSeconds * 1000;\n    const bigSteps = modeCData.steps;\n    const perBigStepMs = Math.max(1000, Math.floor(totalMs / bigSteps.length));\n    const processBigStep = bigStepIndex => {\n      if (bigStepIndex >= bigSteps.length) {\n        // Todos os big steps concluídos, limpar e mostrar resposta final\n        cTimeoutsRef.current.push(setTimeout(() => {\n          setCBigSteps([]);\n          setCCurrentBigStep(0);\n          setCCurrentSmallStep(0);\n          setCSmallStepText('');\n        }, 1000));\n        return;\n      }\n      const bigStep = bigSteps[bigStepIndex];\n\n      // Adicionar big step à lista\n      setCBigSteps(prev => [...prev, {\n        ...bigStep,\n        status: 'typing',\n        currentSmallStep: 0,\n        smallStepText: ''\n      }]);\n      setCCurrentBigStep(bigStepIndex);\n      setCCurrentSmallStep(0);\n      setCSmallStepText('');\n      const smallSteps = bigStep.smallSteps;\n      const processSmallStep = smallStepIndex => {\n        if (smallStepIndex >= smallSteps.length) {\n          // Big step concluído, marcar como typed\n          setCBigSteps(prev => prev.map((step, idx) => idx === bigStepIndex ? {\n            ...step,\n            status: 'typed'\n          } : step));\n\n          // Próximo big step\n          cTimeoutsRef.current.push(setTimeout(() => processBigStep(bigStepIndex + 1), 500));\n          return;\n        }\n        setCCurrentSmallStep(smallStepIndex);\n        const smallStepText = smallSteps[smallStepIndex];\n\n        // Efeito de typewriter para small step\n        let charIndex = 0;\n        setCSmallStepText('');\n        const typeSmallStep = () => {\n          if (charIndex < smallStepText.length) {\n            const currentSmallText = smallStepText.slice(0, charIndex + 1);\n            setCSmallStepText(currentSmallText);\n            charIndex++;\n            cTimeoutsRef.current.push(setTimeout(typeSmallStep, 30));\n          } else {\n            // Aguardar um pouco antes do próximo small step\n            cTimeoutsRef.current.push(setTimeout(() => processSmallStep(smallStepIndex + 1), 300));\n          }\n        };\n        cTimeoutsRef.current.push(setTimeout(typeSmallStep, 50));\n      };\n      processSmallStep(0);\n    };\n    processBigStep(0);\n    return () => clearAll();\n  }, [mode, aiTyping, showTypewriter, processingSeconds]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-log\",\n    children: [messages.map((msg, idx) => msg.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserMessage, {\n      text: msg.text\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(AiMessage, {\n      text: msg.text,\n      typewriter: false\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 11\n    }, this)), aiTyping && !showTypewriter && (mode === 'B' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-message ai-loading modeB\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-message-markdown\",\n        \"aria-live\": \"polite\",\n        children: [stepsNoCounters.map((_, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n          className: i === bIdx ? 'typing' : i < bIdx ? 'typed' : '',\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loader\",\n            children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n              visible: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this), bTexts[i]]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 17\n        }, this)), bIdx < stepsNoCounters.length && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ai-typing-dots\",\n          \"aria-hidden\": \"true\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \".\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 47\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }, this) : mode === 'C' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-message ai-loading modeC\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-message-markdown\",\n        \"aria-live\": \"polite\",\n        children: cData && cData.type === 'bigSteps' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [cBigSteps.map((bigStep, bigIndex) => /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `big-step ${bigIndex === cCurrentBigStep ? 'typing' : 'typed'}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader\",\n              children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n                visible: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 23\n            }, this), bigIndex === cCurrentBigStep ? `${bigStep.title} (${bigStep.id}/${cData.steps.length})` : bigStep.title, bigIndex === cCurrentBigStep && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"small-step typing\",\n              children: cSmallStepText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 25\n            }, this)]\n          }, bigIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 21\n          }, this)), cBigSteps.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loader\",\n              children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n                visible: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 23\n            }, this), \"Gerando resposta...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true) : cData && cData.type === 'direct' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loader\",\n            children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n              visible: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 19\n          }, this), cData.response]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"loader\",\n            children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n              visible: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 19\n          }, this), \"Gerando resposta...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-message ai-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ai-message-markdown\",\n        \"aria-live\": \"polite\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n            visible: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 15\n        }, this), aDisplayed || 'Gerando resposta']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 11\n    }, this)), aiTyping && showTypewriter && /*#__PURE__*/_jsxDEV(AiMessage, {\n      text: pendingAiMsg,\n      typewriter: true,\n      onTypewriterEnd: onTypewriterEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 331,\n    columnNumber: 5\n  }, this);\n}\n_s3(MessageLog, \"Burjc6HfqpTiEZfM89dMvSNh804=\");\n_c3 = MessageLog;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserMessage\");\n$RefreshReg$(_c2, \"AiMessage\");\n$RefreshReg$(_c3, \"MessageLog\");","map":{"version":3,"names":["React","IconSparkles","marked","ThreeDots","getRandomModeCResponse","jsxDEV","_jsxDEV","Fragment","_Fragment","useTypewriter","fullText","enabled","speed","onEnd","_s","displayed","setDisplayed","useState","useEffect","i","id","setTimeout","tick","slice","length","undefined","clearTimeout","UserMessage","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AiMessage","typewriter","onTypewriterEnd","_s2","html","useMemo","parse","stillTyping","size","stroke","dangerouslySetInnerHTML","__html","_c2","MessageLog","messages","aiTyping","showTypewriter","pendingAiMsg","messagesEndRef","processingSeconds","mode","_s3","steps","stepsNoCounters","aIdx","setAIdx","aDisplayed","setADisplayed","aIntervalsRef","useRef","step","typing","clearInterval","current","totalMs","perStepMs","Math","max","floor","startTyping","setInterval","prev","next","bIdx","setBIdx","bTexts","setBTexts","Array","fill","bTimeoutsRef","TYPING_CHAR_DELAY_MS","clearAll","forEach","stepsCount","typeStep","index","full","stepStart","Date","now","push","elapsed","remainingHold","cData","setCData","cBigSteps","setCBigSteps","cCurrentBigStep","setCCurrentBigStep","cCurrentSmallStep","setCCurrentSmallStep","cSmallStepText","setCSmallStepText","cTimeoutsRef","modeCData","type","bigSteps","perBigStepMs","processBigStep","bigStepIndex","bigStep","status","currentSmallStep","smallStepText","smallSteps","processSmallStep","smallStepIndex","map","idx","charIndex","typeSmallStep","currentSmallText","msg","sender","_","visible","bigIndex","title","response","ref","_c3","$RefreshReg$"],"sources":["/Users/daniel/Desktop/chat-response/src/components/MessageLog/MessageLog.js"],"sourcesContent":["import React from 'react';\nimport './MessageLog.scss';\nimport { IconSparkles } from '@tabler/icons-react';\nimport { marked } from 'marked';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { getRandomModeCResponse } from '../Chat/aiResponses';\n\n// Hook reutilizável de \"máquina de escrever\"\nconst useTypewriter = (fullText, enabled, speed = 25, onEnd) => {\n  const [displayed, setDisplayed] = React.useState(enabled ? '' : fullText);\n\n  React.useEffect(() => {\n    if (!enabled) {\n      setDisplayed(fullText);\n      return;\n    }\n    let i = 0;\n    setDisplayed('');\n    const id = setTimeout(function tick() {\n      i += 1;\n      setDisplayed(fullText.slice(0, i));\n      if (i < fullText.length) {\n        return setTimeout(tick, speed);\n      }\n      onEnd?.();\n      return undefined;\n    }, speed);\n\n    return () => clearTimeout(id);\n  }, [fullText, enabled, speed, onEnd]);\n\n  return displayed;\n};\n\nexport const UserMessage = ({ text }) => (\n  <div className=\"user-message\">\n    <span>{text}</span>\n  </div>\n);\n\nexport const AiMessage = ({ text, typewriter, onTypewriterEnd }) => {\n  const displayed = useTypewriter(text, !!typewriter, 25, onTypewriterEnd);\n\n  const html = React.useMemo(() => {\n    return marked.parse(displayed);\n  }, [displayed]);\n\n  const stillTyping = typewriter && displayed.length < text.length;\n\n  return (\n    <div className={`ai-message ${typewriter ? 'ai-typing' : 'ai-completed'}`}>\n      <span className=\"chat-ai-icon\">\n        <IconSparkles size={20} stroke={2} />\n      </span>\n      <p\n        className=\"ai-message-markdown\"\n        aria-live=\"polite\"\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n      {stillTyping && (\n        <span className=\"ai-typing-dots\" aria-hidden=\"true\">\n          <span>.</span><span>.</span><span>.</span>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default function MessageLog({\n  messages,\n  aiTyping,\n  showTypewriter,\n  pendingAiMsg,\n  onTypewriterEnd,\n  messagesEndRef,\n  processingSeconds = null,\n  mode = 'A',\n}) {\n  const steps = React.useMemo(() => ([\n    'Buscando base de dados (1/4)',\n    'Identificando os pontos geográficos (2/4)',\n    'Aplicando os filtros definidos (3/4)',\n    'Aplicando camada no mapa (4/4)',\n  ]), []);\n\n  const stepsNoCounters = React.useMemo(() => ([\n    'Buscando base de dados',\n    'Identificando os pontos geográficos',\n    'Aplicando os filtros definidos',\n    'Aplicando camada no mapa',\n  ]), []);\n\n  // ===== Modo A =====\n  const [aIdx, setAIdx] = React.useState(0);\n  const [aDisplayed, setADisplayed] = React.useState('');\n  const aIntervalsRef = React.useRef({ step: null, typing: null });\n\n  React.useEffect(() => {\n    if (mode !== 'A' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearInterval(aIntervalsRef.current.step);\n      clearInterval(aIntervalsRef.current.typing);\n      setAIdx(0);\n      setADisplayed('');\n      return;\n    }\n\n    const totalMs = processingSeconds * 1000;\n    const perStepMs = Math.max(200, Math.floor(totalMs / steps.length));\n\n    const startTyping = (text) => {\n      clearInterval(aIntervalsRef.current.typing);\n      let i = 0;\n      setADisplayed('');\n      aIntervalsRef.current.typing = setInterval(() => {\n        i += 1;\n        setADisplayed(text.slice(0, i));\n        if (i >= text.length) clearInterval(aIntervalsRef.current.typing);\n      }, 20);\n    };\n\n    setAIdx(0);\n    startTyping(steps[0]);\n\n    clearInterval(aIntervalsRef.current.step);\n    aIntervalsRef.current.step = setInterval(() => {\n      setAIdx((prev) => {\n        const next = prev + 1;\n        if (next < steps.length) {\n          startTyping(steps[next]);\n          return next;\n        }\n        clearInterval(aIntervalsRef.current.step);\n        return prev;\n      });\n    }, perStepMs);\n\n    return () => {\n      clearInterval(aIntervalsRef.current.step);\n      clearInterval(aIntervalsRef.current.typing);\n    };\n  }, [mode, aiTyping, showTypewriter, processingSeconds, steps]);\n\n  // ===== Modo B =====\n  const [bIdx, setBIdx] = React.useState(0);\n  const [bTexts, setBTexts] = React.useState(() =>\n    Array(stepsNoCounters.length).fill('')\n  );\n  const bTimeoutsRef = React.useRef([]);\n  const TYPING_CHAR_DELAY_MS = 25;\n\n  React.useEffect(() => {\n    const clearAll = () => {\n      bTimeoutsRef.current.forEach(clearTimeout);\n      bTimeoutsRef.current = [];\n    };\n\n    if (mode !== 'B' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearAll();\n      setBIdx(0);\n      setBTexts(Array(stepsNoCounters.length).fill(''));\n      return;\n    }\n\n    clearAll();\n    setBIdx(0);\n    setBTexts(Array(stepsNoCounters.length).fill(''));\n\n    const totalMs = processingSeconds * 1000;\n    const stepsCount = stepsNoCounters.length;\n    const perStepMs = Math.max(200, Math.floor(totalMs / stepsCount));\n\n    const typeStep = (index) => {\n      const full = stepsNoCounters[index];\n      let i = 0;\n      const stepStart = Date.now();\n\n      setBIdx(index);\n\n      const tick = () => {\n        i += 1;\n        setBTexts((prev) => {\n          const next = prev.slice();\n          next[index] = full.slice(0, i);\n          return next;\n        });\n\n        if (i < full.length) {\n          bTimeoutsRef.current.push(setTimeout(tick, TYPING_CHAR_DELAY_MS));\n        } else {\n          const elapsed = Date.now() - stepStart;\n          const remainingHold = Math.max(0, perStepMs - elapsed);\n\n          if (index + 1 < stepsCount) {\n            bTimeoutsRef.current.push(\n              setTimeout(() => {\n                typeStep(index + 1);\n              }, remainingHold)\n            );\n          }\n        }\n      };\n\n      bTimeoutsRef.current.push(setTimeout(tick, TYPING_CHAR_DELAY_MS));\n    };\n\n    typeStep(0);\n\n    return () => clearAll();\n  }, [mode, aiTyping, showTypewriter, processingSeconds, stepsNoCounters]);\n\n  // ===== Modo C =====\n  const [cData, setCData] = React.useState(null);\n  const [cBigSteps, setCBigSteps] = React.useState([]);\n  const [cCurrentBigStep, setCCurrentBigStep] = React.useState(0);\n  const [cCurrentSmallStep, setCCurrentSmallStep] = React.useState(0);\n  const [cSmallStepText, setCSmallStepText] = React.useState('');\n  const cTimeoutsRef = React.useRef([]);\n\n  React.useEffect(() => {\n    const clearAll = () => {\n      cTimeoutsRef.current.forEach(clearTimeout);\n      cTimeoutsRef.current = [];\n    };\n\n    if (mode !== 'C' || !aiTyping || showTypewriter || !processingSeconds) {\n      clearAll();\n      setCData(null);\n      setCBigSteps([]);\n      setCCurrentBigStep(0);\n      setCCurrentSmallStep(0);\n      setCSmallStepText('');\n      return;\n    }\n\n    // Obter dados aleatórios para o modo C\n    const modeCData = getRandomModeCResponse();\n    setCData(modeCData);\n    setCBigSteps([]);\n    setCCurrentBigStep(0);\n    setCCurrentSmallStep(0);\n    setCSmallStepText('');\n\n    if (modeCData.type === 'direct') {\n      // Para respostas diretas, não há steps\n      return;\n    }\n\n    clearAll();\n\n    const totalMs = processingSeconds * 1000;\n    const bigSteps = modeCData.steps;\n    const perBigStepMs = Math.max(1000, Math.floor(totalMs / bigSteps.length));\n\n    const processBigStep = (bigStepIndex) => {\n      if (bigStepIndex >= bigSteps.length) {\n        // Todos os big steps concluídos, limpar e mostrar resposta final\n        cTimeoutsRef.current.push(\n          setTimeout(() => {\n            setCBigSteps([]);\n            setCCurrentBigStep(0);\n            setCCurrentSmallStep(0);\n            setCSmallStepText('');\n          }, 1000)\n        );\n        return;\n      }\n\n      const bigStep = bigSteps[bigStepIndex];\n      \n      // Adicionar big step à lista\n      setCBigSteps(prev => [...prev, {\n        ...bigStep,\n        status: 'typing',\n        currentSmallStep: 0,\n        smallStepText: ''\n      }]);\n      \n      setCCurrentBigStep(bigStepIndex);\n      setCCurrentSmallStep(0);\n      setCSmallStepText('');\n\n      const smallSteps = bigStep.smallSteps;\n\n      const processSmallStep = (smallStepIndex) => {\n        if (smallStepIndex >= smallSteps.length) {\n          // Big step concluído, marcar como typed\n          setCBigSteps(prev => prev.map((step, idx) => \n            idx === bigStepIndex ? { ...step, status: 'typed' } : step\n          ));\n          \n          // Próximo big step\n          cTimeoutsRef.current.push(\n            setTimeout(() => processBigStep(bigStepIndex + 1), 500)\n          );\n          return;\n        }\n\n        setCCurrentSmallStep(smallStepIndex);\n        const smallStepText = smallSteps[smallStepIndex];\n        \n        // Efeito de typewriter para small step\n        let charIndex = 0;\n        setCSmallStepText('');\n        \n        const typeSmallStep = () => {\n          if (charIndex < smallStepText.length) {\n            const currentSmallText = smallStepText.slice(0, charIndex + 1);\n            setCSmallStepText(currentSmallText);\n            charIndex++;\n            cTimeoutsRef.current.push(setTimeout(typeSmallStep, 30));\n          } else {\n            // Aguardar um pouco antes do próximo small step\n            cTimeoutsRef.current.push(\n              setTimeout(() => processSmallStep(smallStepIndex + 1), 300)\n            );\n          }\n        };\n\n        cTimeoutsRef.current.push(setTimeout(typeSmallStep, 50));\n      };\n\n      processSmallStep(0);\n    };\n\n    processBigStep(0);\n\n    return () => clearAll();\n  }, [mode, aiTyping, showTypewriter, processingSeconds]);\n\n  return (\n    <div className=\"message-log\">\n      {messages.map((msg, idx) =>\n        msg.sender === 'user' ? (\n          <UserMessage key={idx} text={msg.text} />\n        ) : (\n          <AiMessage key={idx} text={msg.text} typewriter={false} />\n        )\n      )}\n\n      {aiTyping && !showTypewriter && (\n        mode === 'B' ? (\n          <div className=\"ai-message ai-loading modeB\">\n            <div className=\"ai-message-markdown\" aria-live=\"polite\">\n              {stepsNoCounters.map((_, i) => (\n                <p key={i} className={i === bIdx ? 'typing' : i < bIdx ? 'typed' : ''}>\n                  <span className=\"loader\">\n                <ThreeDots visible />\n              </span>\n                  {bTexts[i]}\n                </p>\n              ))}\n              {bIdx < stepsNoCounters.length && (\n                <span className=\"ai-typing-dots\" aria-hidden=\"true\">\n                  <span>.</span><span>.</span><span>.</span>\n                </span>\n              )}\n            </div>\n          </div>\n        ) : mode === 'C' ? (\n          <div className=\"ai-message ai-loading modeC\">\n            <div className=\"ai-message-markdown\" aria-live=\"polite\">\n              {cData && cData.type === 'bigSteps' ? (\n                <>\n                  {cBigSteps.map((bigStep, bigIndex) => (\n                    <p key={bigIndex} className={`big-step ${bigIndex === cCurrentBigStep ? 'typing' : 'typed'}`}>\n                      <span className=\"loader\">\n                            <ThreeDots visible />\n                          </span>\n                        {bigIndex === cCurrentBigStep \n                          ? `${bigStep.title} (${bigStep.id}/${cData.steps.length})`\n                          : bigStep.title\n                        }\n                      \n                      {bigIndex === cCurrentBigStep && (\n                        <p className=\"small-step typing\">\n                          \n                          {cSmallStepText}\n                        </p>\n                      )}\n                    </p>\n                  ))}\n                  {cBigSteps.length === 0 && (\n                    <p>\n                      <span className=\"loader\">\n                        <ThreeDots visible />\n                      </span>\n                      Gerando resposta...\n                    </p>\n                  )}\n                </>\n              ) : cData && cData.type === 'direct' ? (\n                <p>\n                  <span className=\"loader\">\n                    <ThreeDots visible />\n                  </span>\n                  {cData.response}\n                </p>\n              ) : (\n                <p>\n                  <span className=\"loader\">\n                    <ThreeDots visible />\n                  </span>\n                  Gerando resposta...\n                </p>\n              )}\n            </div>\n          </div>\n        ) : (\n          <div className=\"ai-message ai-loading\">\n            <p className=\"ai-message-markdown\" aria-live=\"polite\">\n              <span className=\"loader\">\n                <ThreeDots visible />\n              </span>\n              {aDisplayed || 'Gerando resposta'}\n            </p>\n          </div>\n        )\n      )}\n\n      {aiTyping && showTypewriter && (\n        <AiMessage text={pendingAiMsg} typewriter onTypewriterEnd={onTypewriterEnd} />\n      )}\n\n      <div ref={messagesEndRef} />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}