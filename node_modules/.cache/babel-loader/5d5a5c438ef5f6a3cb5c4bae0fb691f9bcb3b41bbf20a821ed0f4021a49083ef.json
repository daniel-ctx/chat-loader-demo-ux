{"ast":null,"code":"var _jsxFileName = \"/Users/daniel/Desktop/chat-response/src/components/MessageLog/MessageLog.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport './MessageLog.scss';\nimport { IconSparkles } from '@tabler/icons-react';\nimport { marked } from 'marked';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserMessage = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"user-message\",\n  children: /*#__PURE__*/_jsxDEV(\"span\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this);\n_c = UserMessage;\nexport const AiMessage = ({\n  text,\n  typewriter,\n  onTypewriterEnd\n}) => {\n  _s();\n  const [displayed, setDisplayed] = React.useState(typewriter ? '' : text);\n  React.useEffect(() => {\n    if (typewriter) {\n      setDisplayed('');\n      let i = 0;\n      const interval = setInterval(() => {\n        setDisplayed(text.slice(0, i + 1));\n        i++;\n        if (i === text.length) {\n          clearInterval(interval);\n          if (onTypewriterEnd) onTypewriterEnd();\n        }\n      }, 25);\n      return () => clearInterval(interval);\n    }\n  }, [text, typewriter, onTypewriterEnd]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `ai-message ${typewriter ? 'ai-typing' : 'ai-completed'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"chat-ai-icon\",\n      children: /*#__PURE__*/_jsxDEV(IconSparkles, {\n        size: 20,\n        stroke: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"ai-message-markdown\",\n      dangerouslySetInnerHTML: {\n        __html: marked.parse(typewriter ? displayed : text)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), typewriter && displayed.length < text.length && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"ai-typing-dots\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \".\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(AiMessage, \"vU+KyZi+ctEePV0BC5MCq0hbwgk=\");\n_c2 = AiMessage;\nexport default function MessageLog({\n  messages,\n  aiTyping,\n  showTypewriter,\n  pendingAiMsg,\n  onTypewriterEnd,\n  messagesEndRef,\n  processingSeconds = null,\n  mode = 'A'\n}) {\n  _s2();\n  const [stepIdx, setStepIdx] = React.useState(0);\n  const [stepTexts, setStepTexts] = React.useState([]);\n  const stepIntervalRef = React.useRef();\n  const typingIntervalRefs = React.useRef([]);\n  const steps = React.useMemo(() => ['Buscando base de dados (1/4)', 'Identificando os pontos geográficos (2/4)', 'Aplicando os filtros definidos (3/4)', 'Aplicando camada no mapa (4/4)'], []);\n  const stepsNoCounters = React.useMemo(() => ['Buscando base de dados', 'Identificando os pontos geográficos', 'Aplicando os filtros definidos', 'Aplicando camada no mapa'], []);\n  React.useEffect(() => {\n    // Controle de etapas durante o estado de processamento (antes do typewriter)\n    if (!aiTyping || showTypewriter || !processingSeconds) {\n      clearInterval(stepIntervalRef.current);\n      typingIntervalRefs.current.forEach(clearInterval);\n      typingIntervalRefs.current = [];\n      setStepIdx(0);\n      setStepTexts([]);\n      return;\n    }\n    const totalMs = processingSeconds * 1000;\n    const perStepMs = Math.max(200, Math.floor(totalMs / steps.length));\n\n    // Função para iniciar tipagem da etapa atual\n    const startTypingCurrent = idx => {\n      clearInterval(typingIntervalRefs.current[idx]);\n      const full = (mode === 'B' ? stepsNoCounters : steps)[idx];\n      let i = 0;\n      typingIntervalRefs.current[idx] = setInterval(() => {\n        i += 1;\n        setStepTexts(prev => {\n          const newTexts = [...prev];\n          newTexts[idx] = full.slice(0, i);\n          return newTexts;\n        });\n        if (i >= full.length) {\n          clearInterval(typingIntervalRefs.current[idx]);\n        }\n      }, 20);\n    };\n\n    // Inicia primeira etapa\n    startTypingCurrent(0);\n\n    // Avança etapas no intervalo calculado\n    clearInterval(stepIntervalRef.current);\n    stepIntervalRef.current = setInterval(() => {\n      setStepIdx(prev => {\n        const next = prev + 1;\n        if (next < steps.length) {\n          // Inicia tipagem da próxima etapa\n          setTimeout(() => startTypingCurrent(next), 0);\n          return next;\n        }\n        clearInterval(stepIntervalRef.current);\n        return prev;\n      });\n    }, perStepMs);\n    return () => {\n      clearInterval(stepIntervalRef.current);\n      typingIntervalRefs.current.forEach(clearInterval);\n      typingIntervalRefs.current = [];\n    };\n  }, [aiTyping, showTypewriter, processingSeconds, steps, stepsNoCounters, stepIdx, mode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"message-log\",\n    children: [messages.map((msg, idx) => msg.sender === 'user' ? /*#__PURE__*/_jsxDEV(UserMessage, {\n      text: msg.text\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(AiMessage, {\n      text: msg.text,\n      typewriter: false\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }, this)), aiTyping && !showTypewriter && (mode === 'B' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-message ai-loading modeB\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ai-message-markdown\",\n        children: stepTexts.map((text, i) => {\n          const fullText = stepsNoCounters[i] || '';\n          const isTyping = text && text.length < fullText.length;\n          const isTyped = text && text.length === fullText.length;\n          return /*#__PURE__*/_jsxDEV(\"p\", {\n            className: isTyping ? 'typing' : isTyped ? 'typed' : '',\n            children: text || ''\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-message ai-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        class: \"ai-message-markdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"loader\",\n          children: /*#__PURE__*/_jsxDEV(ThreeDots, {\n            visible: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 36\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 15\n        }, this), stepTexts[0] || 'Gerando resposta']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }, this)), aiTyping && showTypewriter && /*#__PURE__*/_jsxDEV(AiMessage, {\n      text: pendingAiMsg,\n      typewriter: true,\n      onTypewriterEnd: onTypewriterEnd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: messagesEndRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s2(MessageLog, \"CF8GpaXlt5uSub7pqPWS9AMDg44=\");\n_c3 = MessageLog;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"UserMessage\");\n$RefreshReg$(_c2, \"AiMessage\");\n$RefreshReg$(_c3, \"MessageLog\");","map":{"version":3,"names":["React","IconSparkles","marked","ThreeDots","jsxDEV","_jsxDEV","UserMessage","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","AiMessage","typewriter","onTypewriterEnd","_s","displayed","setDisplayed","useState","useEffect","i","interval","setInterval","slice","length","clearInterval","size","stroke","dangerouslySetInnerHTML","__html","parse","_c2","MessageLog","messages","aiTyping","showTypewriter","pendingAiMsg","messagesEndRef","processingSeconds","mode","_s2","stepIdx","setStepIdx","stepTexts","setStepTexts","stepIntervalRef","useRef","typingIntervalRefs","steps","useMemo","stepsNoCounters","current","forEach","totalMs","perStepMs","Math","max","floor","startTypingCurrent","idx","full","prev","newTexts","next","setTimeout","map","msg","sender","fullText","isTyping","isTyped","class","visible","ref","_c3","$RefreshReg$"],"sources":["/Users/daniel/Desktop/chat-response/src/components/MessageLog/MessageLog.js"],"sourcesContent":["import React from 'react';\nimport './MessageLog.scss';\nimport { IconSparkles } from '@tabler/icons-react';\nimport { marked } from 'marked';\nimport { ThreeDots } from 'react-loader-spinner';\n\nexport const UserMessage = ({ text }) => (\n  <div className=\"user-message\">\n    <span>{text}</span>\n  </div>\n);\n\nexport const AiMessage = ({ text, typewriter, onTypewriterEnd }) => {\n  const [displayed, setDisplayed] = React.useState(typewriter ? '' : text);\n  React.useEffect(() => {\n    if (typewriter) {\n      setDisplayed('');\n      let i = 0;\n      const interval = setInterval(() => {\n        setDisplayed(text.slice(0, i + 1));\n        i++;\n        if (i === text.length) {\n          clearInterval(interval);\n          if (onTypewriterEnd) onTypewriterEnd();\n        }\n      }, 25);\n      return () => clearInterval(interval);\n    }\n  }, [text, typewriter, onTypewriterEnd]);\n\n  return (\n    <div className={`ai-message ${typewriter ? 'ai-typing' : 'ai-completed'}`}>\n      <span className=\"chat-ai-icon\"><IconSparkles size={20} stroke={2} /></span>\n      <p\n        className=\"ai-message-markdown\"\n        dangerouslySetInnerHTML={{ __html: marked.parse(typewriter ? displayed : text) }}\n      />\n      {typewriter && displayed.length < text.length && (\n        <span className=\"ai-typing-dots\">\n          <span>.</span><span>.</span><span>.</span>\n        </span>\n      )}\n    </div>\n  );\n};\n\nexport default function MessageLog({ messages, aiTyping, showTypewriter, pendingAiMsg, onTypewriterEnd, messagesEndRef, processingSeconds = null, mode = 'A' }) {\n  const [stepIdx, setStepIdx] = React.useState(0);\n  const [stepTexts, setStepTexts] = React.useState([]);\n  const stepIntervalRef = React.useRef();\n  const typingIntervalRefs = React.useRef([]);\n\n  const steps = React.useMemo(() => ([\n    'Buscando base de dados (1/4)',\n    'Identificando os pontos geográficos (2/4)',\n    'Aplicando os filtros definidos (3/4)',\n    'Aplicando camada no mapa (4/4)'\n  ]), []);\n  const stepsNoCounters = React.useMemo(() => ([\n    'Buscando base de dados',\n    'Identificando os pontos geográficos',\n    'Aplicando os filtros definidos',\n    'Aplicando camada no mapa'\n  ]), []);\n\n  React.useEffect(() => {\n    // Controle de etapas durante o estado de processamento (antes do typewriter)\n    if (!aiTyping || showTypewriter || !processingSeconds) {\n      clearInterval(stepIntervalRef.current);\n      typingIntervalRefs.current.forEach(clearInterval);\n      typingIntervalRefs.current = [];\n      setStepIdx(0);\n      setStepTexts([]);\n      return;\n    }\n\n    const totalMs = processingSeconds * 1000;\n    const perStepMs = Math.max(200, Math.floor(totalMs / steps.length));\n\n    // Função para iniciar tipagem da etapa atual\n    const startTypingCurrent = (idx) => {\n      clearInterval(typingIntervalRefs.current[idx]);\n      const full = (mode === 'B' ? stepsNoCounters : steps)[idx];\n      let i = 0;\n      typingIntervalRefs.current[idx] = setInterval(() => {\n        i += 1;\n        setStepTexts(prev => {\n          const newTexts = [...prev];\n          newTexts[idx] = full.slice(0, i);\n          return newTexts;\n        });\n        if (i >= full.length) {\n          clearInterval(typingIntervalRefs.current[idx]);\n        }\n      }, 20);\n    };\n\n    // Inicia primeira etapa\n    startTypingCurrent(0);\n\n    // Avança etapas no intervalo calculado\n    clearInterval(stepIntervalRef.current);\n    stepIntervalRef.current = setInterval(() => {\n      setStepIdx(prev => {\n        const next = prev + 1;\n        if (next < steps.length) {\n          // Inicia tipagem da próxima etapa\n          setTimeout(() => startTypingCurrent(next), 0);\n          return next;\n        }\n        clearInterval(stepIntervalRef.current);\n        return prev;\n      });\n    }, perStepMs);\n\n    return () => {\n      clearInterval(stepIntervalRef.current);\n      typingIntervalRefs.current.forEach(clearInterval);\n      typingIntervalRefs.current = [];\n    };\n  }, [aiTyping, showTypewriter, processingSeconds, steps, stepsNoCounters, stepIdx, mode]);\n\n  return (\n    <div className=\"message-log\">\n\n      {messages.map((msg, idx) =>\n        msg.sender === 'user' ? (\n          <UserMessage key={idx} text={msg.text} />\n        ) : (\n          <AiMessage key={idx} text={msg.text} typewriter={false} />\n        )\n      )}\n      {aiTyping && !showTypewriter && (\n        mode === 'B' ? (\n          <div className=\"ai-message ai-loading modeB\">\n            <div className=\"ai-message-markdown\">\n              {stepTexts.map((text, i) => {\n                const fullText = stepsNoCounters[i] || '';\n                const isTyping = text && text.length < fullText.length;\n                const isTyped = text && text.length === fullText.length;\n                return (\n                  <p key={i} className={isTyping ? 'typing' : isTyped ? 'typed' : ''}>\n                    {text || ''}\n                  </p>\n                );\n              })}\n            </div>\n          </div>\n        ) : (\n          <div className=\"ai-message ai-loading\">\n            <p class=\"ai-message-markdown\">\n              <span class=\"loader\"><ThreeDots visible /></span>\n              {stepTexts[0] || 'Gerando resposta'}\n            </p>\n          </div>\n        )\n      )}\n      {aiTyping && showTypewriter && (\n        <AiMessage text={pendingAiMsg} typewriter={true} onTypewriterEnd={onTypewriterEnd} />\n      )}\n      <div ref={messagesEndRef} />\n    </div>\n  );\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}